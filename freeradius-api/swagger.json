{
  "openapi": "3.0.0",
  "info": {
    "title": "FreeRADIUS API",
    "description": "REST API untuk mengelola FreeRADIUS database - NAS management dan User management",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://api.example.com/api",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "user": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": "admin"
              },
              "role": {
                "type": "string",
                "example": "admin"
              }
            }
          }
        }
      },
      "NAS": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "nasname": {
            "type": "string",
            "example": "192.168.1.1"
          },
          "shortname": {
            "type": "string",
            "example": "switch01"
          },
          "type": {
            "type": "string",
            "example": "cisco"
          },
          "ports": {
            "type": "integer",
            "example": 1645
          },
          "secret": {
            "type": "string",
            "example": "secret123"
          },
          "server": {
            "type": "string",
            "example": "radius.example.com"
          },
          "community": {
            "type": "string",
            "example": "public"
          },
          "description": {
            "type": "string",
            "example": "Main office switch"
          }
        }
      },
      "NASRequest": {
        "type": "object",
        "required": ["nasname", "shortname", "secret"],
        "properties": {
          "nasname": {
            "type": "string",
            "example": "192.168.1.1"
          },
          "shortname": {
            "type": "string",
            "example": "switch01"
          },
          "type": {
            "type": "string",
            "example": "cisco"
          },
          "ports": {
            "type": "integer",
            "example": 1645
          },
          "secret": {
            "type": "string",
            "example": "secret123"
          },
          "server": {
            "type": "string",
            "example": "radius.example.com"
          },
          "community": {
            "type": "string",
            "example": "public"
          },
          "description": {
            "type": "string",
            "example": "Main office switch"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "john.doe"
          },
          "attribute": {
            "type": "string",
            "example": "Cleartext-Password"
          },
          "op": {
            "type": "string",
            "example": ":="
          },
          "value": {
            "type": "string",
            "example": "password123"
          }
        }
      },
      "UserRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "example": "john.doe"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "attributes": {
            "type": "object",
            "example": {
              "Framed-IP-Address": "192.168.1.100",
              "Session-Timeout": "3600"
            }
          }
        }
      },
      "UserAttribute": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "john.doe"
          },
          "attribute": {
            "type": "string",
            "example": "Framed-IP-Address"
          },
          "op": {
            "type": "string",
            "example": "="
          },
          "value": {
            "type": "string",
            "example": "192.168.1.100"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Invalid credentials"
          },
          "code": {
            "type": "string",
            "example": "AUTH_FAILED"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "data": {
            "type": "object"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "description": "Authenticate user and return JWT token",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Verify JWT token",
        "description": "Verify if the provided JWT token is valid",
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid or expired token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/nas": {
      "get": {
        "tags": ["NAS Management"],
        "summary": "Get all NAS devices",
        "description": "Retrieve list of all Network Access Server devices",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by nasname or shortname",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of NAS devices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/NAS"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "pages": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["NAS Management"],
        "summary": "Create new NAS device",
        "description": "Add a new Network Access Server device",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NASRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "NAS device created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NAS"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "NAS device already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/nas/{id}": {
      "get": {
        "tags": ["NAS Management"],
        "summary": "Get NAS device by ID",
        "description": "Retrieve a specific Network Access Server device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "NAS device ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NAS device details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NAS"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "NAS device not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["NAS Management"],
        "summary": "Update NAS device",
        "description": "Update an existing Network Access Server device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "NAS device ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NASRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NAS device updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SuccessResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/NAS"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "NAS device not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["NAS Management"],
        "summary": "Delete NAS device",
        "description": "Remove a Network Access Server device",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "NAS device ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "NAS device deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "NAS device not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get all users",
        "description": "Retrieve list of all RADIUS users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Items per page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        },
                        "pages": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Management"],
        "summary": "Create new user",
        "description": "Add a new RADIUS user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get user by username",
        "description": "Retrieve a specific RADIUS user with attributes",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details with attributes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "attributes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserAttribute"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["User Management"],
        "summary": "Update user",
        "description": "Update an existing RADIUS user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "newpassword123"
                  },
                  "attributes": {
                    "type": "object",
                    "example": {
                      "Framed-IP-Address": "192.168.1.101",
                      "Session-Timeout": "7200"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Management"],
        "summary": "Delete user",
        "description": "Remove a RADIUS user and all associated attributes",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}/attributes": {
      "get": {
        "tags": ["User Management"],
        "summary": "Get user attributes",
        "description": "Retrieve all attributes for a specific user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User attributes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserAttribute"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Management"],
        "summary": "Add user attribute",
        "description": "Add a new attribute to a user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "description": "Username",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["attribute", "value"],
                "properties": {
                  "attribute": {
                    "type": "string",
                    "example": "Framed-IP-Address"
                  },
                  "op": {
                    "type": "string",
                    "example": "=",
                    "default": "="
                  },
                  "value": {
                    "type": "string",
                    "example": "192.168.1.100"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Attribute added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["System"],
        "summary": "Health check",
        "description": "Check API and database health status",
        "security": [],
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 3600.5
                    },
                    "database": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "example": "connected"
                        },
                        "response_time": {
                          "type": "number",
                          "example": 15.2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "System is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and token management"
    },
    {
      "name": "NAS Management",
      "description": "Network Access Server device management"
    },
    {
      "name": "User Management",
      "description": "RADIUS user and attribute management"
    },
    {
      "name": "System",
      "description": "System health and monitoring"
    }
  ]
}